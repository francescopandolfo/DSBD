#https://github.com/mcicolella/spring-boot-microservices/tree/master
#https://github.com/mirianacorsaro/DSBD-project/tree/main

version: '3.8'

services:
  
  usersmanager:
    container_name: usersmanager
    build:
      dockerfile: Dockerfile
      context: ./users-manager
    restart: always
    depends_on:
      - gettimeseries
      - kafka
      - mysqldb
    ports:
      - 8002:8080
    networks:
      - dsbd-net      
    environment:
      spring.datasource.url: "jdbc:mysql://mysqldb:3306/dsbd-pandolfo?serverTimezone=UTC"
      dsbd.gettimeseries.url: "http://gettimeseries:8080/gettimeseries"

  gettimeseries:
    container_name: gettimeseries
    build:
      dockerfile: Dockerfile
      context: ./get-time-series
    ports:
      - 8001:8080
    networks:
      - dsbd-net      

  mysqldb:
    image: "mysql"
    restart: always
    container_name: mysqldb
    environment:
      MYSQL_DATABASE: dsbd-pandolfo
      MYSQL_USER: francesco
      MYSQL_PASSWORD: pandolfo
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_HOST: localhost
    volumes:
      - ./data/db:/var/lib/mysql  #eseguire prima: mkdir -p ./data/db
    ports:
      - 6033:3306
    networks:
      - dsbd-net
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10     

#  notifier:
#    container_name: notifier
#    build:
#      dockerfile: Dockerfile
#      context: ./notifier
#    restart: always
#    networks:
#      - dsbd-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 2181
    networks:
      - dsbd-net      
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports: #da eliminare dopo il debug
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 10000
    networks:
      - dsbd-net

networks:
  dsbd-net:
